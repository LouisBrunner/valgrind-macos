
# Suppressions for Darwin 22.x / macOS 13.0 Ventura

############################################

# I don't understand how chkstk works so no clue how to properly handle it
{
   OSX1300:chkstk1
   Memcheck:Addr1
   fun:__chkstk_darwin_probe
   ...
   fun:_ZN5dyld*
}

{
   OSX1300:chkstk2
   Memcheck:Addr1
   fun:__chkstk_darwin_probe
   ...
   fun:(below main)
}

# Due to accessing options.useHaswell, whose value comes from a call to host_info, the options themselves are stack-allocated
# See https://github.com/apple-oss-distributions/dyld/blob/dyld-1042.1/dyld/SharedCacheRuntime.cpp#L251
{
   OSX1300:validMagic
   Memcheck:Cond
   ...
   fun:_ZN5dyld3L10validMagicERKNS_18SharedCacheOptionsEPK15DyldSharedCache
   ...
}

# Due to reading GradedArchs::_orderedCpuTypes, which are statically allocated,
# but GradedArchs::forCurrentOS returns the right one based on isHaswell (which also calls host_info)
{
   OSX1300:GradedArchs::checksOSBinary1
   Memcheck:Value8
   ...
   fun:_ZNK5dyld311GradedArchs14checksOSBinaryEv
   ...
}

{
   OSX1300:GradedArchs::checksOSBinary2
   Memcheck:Cond
   ...
   fun:_ZNK5dyld311GradedArchs14checksOSBinaryEv
   ...
}

# Probably (didn't investigate) from getArchNames which uses GradedArchs::forEachArch, which uses GradedArchs::_orderedCpuTypes
{
   OSX1300:MachOFile::compatibleSlice
   Memcheck:Value8
   ...
   fun:_ZN5dyld39MachOFile15compatibleSliceER11DiagnosticsPKvmPKcNS_8PlatformEbRKNS_11GradedArchsE
   ...
}

# No clue
{
   OSX1300:BadBlockInvoke
   Memcheck:Cond
   ...
   fun:___ZNK5dyld46Loader25findAndRunAllInitializersERNS_12RuntimeStateE_block_invoke
   ...
}

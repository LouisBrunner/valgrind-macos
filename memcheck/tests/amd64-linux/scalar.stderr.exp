-----------------------------------------------------
  0:           __NR_read 1+3s 1m
-----------------------------------------------------
Syscall param (syscallno) contains uninitialised byte(s)
   ...
   by 0x........: main (scalar.c)

Syscall param read(fd) contains uninitialised byte(s)
   ...
   by 0x........: main (scalar.c)

Syscall param read(buf) contains uninitialised byte(s)
   ...
   by 0x........: main (scalar.c)

Syscall param read(count) contains uninitialised byte(s)
   ...
   by 0x........: main (scalar.c)

Syscall param read(buf) points to unaddressable byte(s)
   ...
   by 0x........: main (scalar.c)
 Address 0x........ is not stack'd, malloc'd or (recently) free'd

-----------------------------------------------------
  1:          __NR_write 3s 1m
-----------------------------------------------------
Syscall param write(fd) contains uninitialised byte(s)
   ...
   by 0x........: main (scalar.c)

Syscall param write(buf) contains uninitialised byte(s)
   ...
   by 0x........: main (scalar.c)

Syscall param write(count) contains uninitialised byte(s)
   ...
   by 0x........: main (scalar.c)

Syscall param write(buf) points to unaddressable byte(s)
   ...
   by 0x........: main (scalar.c)
 Address 0x........ is not stack'd, malloc'd or (recently) free'd

-----------------------------------------------------
 60:           __NR_exit below
-----------------------------------------------------
-----------------------------------------------------
9999:                9999 1e
-----------------------------------------------------
WARNING: unhandled amd64-linux syscall: 9999
You may be able to write your own handler.
Read the file README_MISSING_SYSCALL_OR_IOCTL.
Nevertheless we consider this a bug.  Please report
it at http://valgrind.org/support/bug_reports.html.
-----------------------------------------------------
 60:           __NR_exit 1s 0m
-----------------------------------------------------
Syscall param exit(status) contains uninitialised byte(s)
   ...
   by 0x........: main (scalar.c)

